/*************************************************************************
*
* Copyright � Microsoft Corporation. All rights reserved.
* Copyright � Broadcom Inc. All rights reserved.
* Licensed under the MIT License.
*
*************************************************************************/
`ifndef __CR_SU_REGFILEPKG_SVP
`define __CR_SU_REGFILEPKG_SVP
package cr_su_regfilePKG;























typedef enum logic [6:0]
       {CDDIP_FRMD_INT_APP       = 7'hf, 
	CDDIP_FRMD_INT_SIP       = 7'h10, 
	CDDIP_FRMD_INT_LIP       = 7'h11, 
	CDDIP_FRMD_INT_VM        = 7'h12, 
	CDDIP_FRMD_INT_VM_SHORT  = 7'h16, 
	CDDIP_TYPE_IN_RSV        = 7'h7f} cddip_cmd_frmd_in_type_e;



typedef enum logic [6:0]
       {CCEIP_FRMD_INT_APP       = 7'hf, 
	CCEIP_FRMD_INT_SIP       = 7'h10, 
	CCEIP_FRMD_INT_LIP       = 7'h11, 
	CCEIP_FRMD_INT_VM        = 7'h12, 
	CCEIP_FRMD_INT_VM_SHORT  = 7'h16, 
	CCEIP_TYPE_OUT_RSV       = 7'h7f} cceip_cmd_frmd_out_type_e;



typedef enum logic [6:0]
       {CDDIP_FRMD_USER_NULL  = 7'hb, 
	CDDIP_FRMD_USER_PI16  = 7'hc, 
	CDDIP_FRMD_USER_PI64  = 7'hd, 
	CDDIP_FRMD_USER_VM    = 7'he, 
	CDDIP_TYPE_OUT_RSV    = 7'h7f} cddip_cmd_frmd_out_type_e;



typedef enum logic 
       {NOT_GEN  = 1'h0, 
	GEN      = 1'h1} cmd_frmd_out_crc_e;



typedef enum logic [1:0]
       {FRMD_T10_DIX  = 2'h0, 
	FRMD_CRC64    = 2'h1, 
	FRMD_CRC64E   = 2'h2, 
	FRMD_CRC_RSV  = 2'h3} cmd_frmd_out_crc_type_e;











typedef enum logic 
       {FRMD_MAC_NOP  = 1'h0, 
	FRMD_MAC_CAL  = 1'h1} cmd_frmd_raw_mac_sel_e;



typedef enum logic 
       {CHU_NORMAL  = 1'h0, 
	CHU_APPEND  = 1'h1} cmd_chu_append_e;







































typedef enum logic [7:0]
       {REVISION_CONFIG         = 8'h0, 
	SPARE_CONFIG            = 8'h4, 
	DBG_CONFIG              = 8'h8, 
	HB_SUP                  = 8'hc, 
	HISTORY_BUFFER_PART0_0  = 8'h14, 
	HISTORY_BUFFER_PART1_0  = 8'h18, 
	HISTORY_BUFFER_PART2_0  = 8'h1c, 
	HISTORY_BUFFER_PART3_0  = 8'h20, 
	HISTORY_BUFFER_PART0_1  = 8'h24, 
	HISTORY_BUFFER_PART1_1  = 8'h28, 
	HISTORY_BUFFER_PART2_1  = 8'h2c, 
	HISTORY_BUFFER_PART3_1  = 8'h30, 
	HISTORY_BUFFER_PART0_2  = 8'h34, 
	HISTORY_BUFFER_PART1_2  = 8'h38, 
	HISTORY_BUFFER_PART2_2  = 8'h3c, 
	HISTORY_BUFFER_PART3_2  = 8'h40, 
	HISTORY_BUFFER_PART0_3  = 8'h44, 
	HISTORY_BUFFER_PART1_3  = 8'h48, 
	HISTORY_BUFFER_PART2_3  = 8'h4c, 
	HISTORY_BUFFER_PART3_3  = 8'h50, 
	HISTORY_BUFFER_PART0_4  = 8'h54, 
	HISTORY_BUFFER_PART1_4  = 8'h58, 
	HISTORY_BUFFER_PART2_4  = 8'h5c, 
	HISTORY_BUFFER_PART3_4  = 8'h60, 
	HISTORY_BUFFER_PART0_5  = 8'h64, 
	HISTORY_BUFFER_PART1_5  = 8'h68, 
	HISTORY_BUFFER_PART2_5  = 8'h6c, 
	HISTORY_BUFFER_PART3_5  = 8'h70, 
	HISTORY_BUFFER_PART0_6  = 8'h74, 
	HISTORY_BUFFER_PART1_6  = 8'h78, 
	HISTORY_BUFFER_PART2_6  = 8'h7c, 
	HISTORY_BUFFER_PART3_6  = 8'h80, 
	HISTORY_BUFFER_PART0_7  = 8'h84, 
	HISTORY_BUFFER_PART1_7  = 8'h88, 
	HISTORY_BUFFER_PART2_7  = 8'h8c, 
	HISTORY_BUFFER_PART3_7  = 8'h90, 
	AGG_SU_COUNT_A          = 8'h94} address_e;



typedef union packed {
  struct packed {
    logic [7:0]                      part0;                    
  } r;
  struct packed {
    logic [7:0]                    revid;                    
  } f;
} revid_t;
localparam revid_t revid_t_reset 
     = {8'h0};



typedef union packed {
  struct packed {
    logic [31:0]                     part0;                    
  } r;
  struct packed {
    logic [31:0]                   spare;                    
  } f;
} spare_t;
localparam spare_t spare_t_reset 
     = {32'h0};



typedef union packed {
  struct packed {
    logic                            part0;                    
  } r;
  struct packed {
    logic                          force_ob_bp;              
  } f;
} dbg_t;
localparam dbg_t dbg_t_reset 
     = {1'h0};



typedef union packed {
  struct packed {
    logic [2:0]                      part0;                    
  } r;
  struct packed {
    logic [2:0]                    wr_pointer;               
  } f;
} hb_sup_t;
localparam hb_sup_t hb_sup_t_reset 
     = {3'h0};



typedef union packed {
  struct packed {
    logic [23:0]                     part0;                    
  } r;
  struct packed {
    logic [23:0]                   bytes_in;                 
  } f;
} history_buffer_part_0_t;
localparam history_buffer_part_0_t history_buffer_part_0_t_reset 
     = {24'h0};



typedef union packed {
  struct packed {
    logic [23:0]                     part0;                    
  } r;
  struct packed {
    logic [23:0]                   bytes_out;                
  } f;
} history_buffer_part_1_t;
localparam history_buffer_part_1_t history_buffer_part_1_t_reset 
     = {24'h0};



typedef union packed {
  struct packed {
    logic [31:0]                     part0;                    
  } r;
  struct packed {
    logic [7:0]                    seq_num;                  
    logic [23:0]                   basis;                    
  } f;
} history_buffer_part_2_t;
localparam history_buffer_part_2_t history_buffer_part_2_t_reset 
     = {8'h0, 
	24'h0};



typedef union packed {
  struct packed {
    logic [27:0]                     part0;                    
  } r;
  struct packed {
    logic                          cmd_cmp;                  
    logic [10:0]                   frame_num;                
    logic [15:0]                   sched_handle;             
  } f;
} history_buffer_part_3_t;
localparam history_buffer_part_3_t history_buffer_part_3_t_reset 
     = {1'h0, 
	11'h0, 
	16'h0};



typedef union packed {
  struct packed {
    logic [31:0]                     part0;                    
  } r;
  struct packed {
    logic [31:0]                   count;                    
  } f;
} agg_su_counter_t;
localparam agg_su_counter_t agg_su_counter_t_reset 
     = {32'h0};



typedef union packed {
  struct packed {
    logic                            part0;                    
  } r;
  struct packed {
    logic                          index;                    
  } f;
} agg_su_index_t;
localparam agg_su_index_t agg_su_index_t_reset 
     = {1'h0};
endpackage : cr_su_regfilePKG

`endif 
